{"version":3,"sources":["me.png","components/Navbar.js","components/About.js","components/Resume.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseHover","bind","assertThisInitialized","handleScroll","state","isHovering","isScrolling","window","addEventListener","removeEventListener","setState","setTimeout","toggleHoverState","react_default","a","createElement","onMouseEnter","onMouseLeave","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Component","About","scrollAnimation_min_default","animateIn","animateOut","src","me","style","marginBottom","alt","Resume","handleEducationHover","handleExperienceHover","isEducationHovering","isExperienceHovering","toggleEducationHoverState","toggleExperienceHoverState","App","components_Navbar","components_About","components_Resume","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0415b13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.4c5f826b.png\";","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleMouseHover = this.handleMouseHover.bind(this);\n\t\tthis.handleScroll = this.handleScroll.bind(this);\n\t\tthis.state = {\n\t\t\tisHovering: false,\n\t\t\tisScrolling: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('scroll', this.handleScroll);\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('scroll', this.handleScroll);\n\t}\n\n\thandleScroll() {\n\t\tthis.setState({ isScrolling: true });\n\t\tsetTimeout(\n\t\t\tfunction () {\n\t\t\t\tthis.setState({ isScrolling: false });\n\t\t\t}\n\t\t\t\t.bind(this),\n\t\t\t3000\n\t\t);\n\t}\n\n\thandleMouseHover() {\n\t\tthis.setState(this.toggleHoverState);\n\t}\n\n\ttoggleHoverState(state) {\n\t\treturn {\n\t\t\tisHovering: !state.isHovering,\n\t\t};\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t<div onMouseEnter={this.handleMouseHover}\n\t\t\t\tonMouseLeave={this.handleMouseHover}\n\t\t\t\tclassName={(this.state.isHovering || this.state.isScrolling) ? 'show-nav' : 'hide-nav'}\n\t\t\t>\n\t\t\t\t<nav className='navbar navbar-expand-lg fixed-top'>\n\t\t\t\t\t{/* <a className='navbar-brand' href='#'>\n\t\t\t\t\t\t\tNavbar\n\t\t\t\t\t\t</a> */}\n\t\t\t\t\t<button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarNav'\n\t\t\t\t\t\taria-controls='navbarNav' aria-expanded='false' aria-label='Toggle navigation'>\n\t\t\t\t\t\t<span className='navbar-toggler-icon' />\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className='collapse navbar-collapse' id='navbarNav'>\n\t\t\t\t\t\t<ul className='navbar-nav ml-auto'>\n\t\t\t\t\t\t\t<li className='nav-item active'>\n\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t<a className='nav-link navbar-links' href='#'>\n\t\t\t\t\t\t\t\t\t\tabout <span className='sr-only'>(current)</span>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t<a className='nav-link navbar-links' href='#resume'>\n\t\t\t\t\t\t\t\t\t\tresume\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t<a className='nav-link navbar-links' href='#'>\n\t\t\t\t\t\t\t\t\t\tprojects\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t<a className='nav-link navbar-links' href='#'>\n\t\t\t\t\t\t\t\t\t\tskills\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</nav>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport me from '../me.png';\nimport { TweenMax } from \"gsap/TweenMax\"\nimport { Tween, Timeline, SplitWords, SplitLetters, Controls } from \"react-gsap\";\n// import ScrollMagic from \"scrollmagic\";\n// import \"scrollmagic/scrollmagic/uncompressed/plugins/animation.gsap\";\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport \"animate.css/animate.min.css\";\n\nclass About extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    // componentDidMount() {\n    //     new ScrollMagic.Scene({\n    //         triggerElement: \"#scrollStarts\",\n    //         duration: 400, // scroll distance\n    //         offset: 200 // start this scene after scrolling for 50px\n    //     })\n    //         .setTween(\"#myElement\", {\n    //             scale: 0.5,\n    //             color: \"red\"\n    //         })\n    //         .setPin(\"#myElement\") // pins the element for the the scene's duration\n    //         .addTo(this.controller); // assign the scene to the controller\n    // }\n\n    render() {\n        let marginBottom = {\n            marginBottom: '20px',\n        }\n\n        // const TweenComponent = () => (\n        //     // <Tween from={{ x: '100px', rotation: -360 }}>\n        //     // <ScrollAnimation animateIn=\"fadeIn\">\n        //     //     <div className=\"header-bg\">\n        //     //         <h1 className=\"title\"> Hi, I'm Anne Marie </h1>\n        //     //     </div>\n        //     // </ScrollAnimation>\n        //     // </Tween>\n        //     // <Tween from={{ x: '300px', rotation: -360 }}>\n        //     //     <SplitWords>\n        //     //         <div style={{ display: 'inline-block', fontSize: '40px' }}>\n        //     //             <h1 className=\"title\">Hi, I'm Anne Marie</h1>\n        //     //         </div>\n        //     //     </SplitWords>\n        //     // </Tween>\n        // );\n\n        // TweenMax.to(\".me\", 2, { left: 600 })\n\n        return (\n            <div className=\"page\">\n\n                <div className='about-me-paragraph'>\n                    <ScrollAnimation animateIn='bounceInDown' animateOut='bounceOutUp'>\n                        {/* <TweenComponent /> */}\n                        <div className=\"header-bg\">\n                            <h1 className=\"title\"> Hi, I'm Anne Marie </h1>\n                        </div>\n                    </ScrollAnimation>\n\n                    <ScrollAnimation animateIn='bounceInLeft' animateOut='bounceOutLeft'>\n                        <p>\n                            Fullstack Software Engineer<br />\n                            JavaScript | React | EmberJS (among other things)<br />\n                            Work Hard, Have Fun, Stay Positive<br />\n                            Chicago, IL<br />\n                            I just like to make things :)<br />\n                        </p>\n                    </ScrollAnimation>\n                </div>\n                <ScrollAnimation animateIn='bounceInRight' animateOut='bounceOutRight'>\n                    <img src={me} className='me' style={marginBottom} alt='logo' />\n                </ScrollAnimation>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { Tween, Timeline, SplitWords, SplitLetters, Controls } from \"react-gsap\";\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport \"animate.css/animate.min.css\";\n\nclass Resume extends Component {\n    constructor(props) {\n        super(props);\n        this.handleEducationHover = this.handleEducationHover.bind(this);\n        this.handleExperienceHover = this.handleExperienceHover.bind(this);\n        this.state = {\n            isEducationHovering: false,\n            isExperienceHovering: false,\n        };\n    }\n\n    handleEducationHover() {\n        this.setState(this.toggleEducationHoverState);\n    }\n\n    toggleEducationHoverState(state) {\n        return {\n            isEducationHovering: !state.isEducationHovering,\n        };\n    }\n\n    handleExperienceHover() {\n        this.setState(this.toggleExperienceHoverState);\n    }\n\n    toggleExperienceHoverState(state) {\n        return {\n            isExperienceHovering: !state.isExperienceHovering,\n        };\n    }\n\n    render() {\n\n        return (\n            <div className=\"page resume-align\" id=\"resume\">\n                <div className=\"resume-box-wrapper\">\n                    <ScrollAnimation animateIn='bounceInUp' animateOut='bounceOutRight'>\n                        <div onMouseEnter={this.handleEducationHover}\n                            onMouseLeave={this.handleEducationHover}\n                            className={this.state.isEducationHovering ? 'expand-resume-box' : 'contract-resume-box'}\n                        >\n                            <h1 className=\"resume-box-header\">Education</h1>\n                            <p className={this.state.isEducationHovering ? 'show-resume-p' : 'hide-resume-p'}>\n                                <u>The Ohio State University</u> <i>B.S. in Business Administration</i> <br />\n                                <b>Specialization:</b> Accounting  <b>GPA:</b> 3.06 <br />\n                                <b>Honors Cohort Program:</b> 1 of 30 out of over 1000 business students selected to participate in a rigorous academic program that focused on leadership skills, team building, real-world experience, and service-learning opportunities <br />\n                                <br />\n                                <u>Fullstack Academy</u> <i>Software Engineering Student</i> <br />\n                                Intensive software development program focusing on JavaScript, Sequelize, Express, React, and related libraries. Created multiple fullstack applications.\n                            </p>\n                        </div>\n                    </ScrollAnimation>\n                    <ScrollAnimation animateIn='bounceInDown' animateOut='bounceOutLeft'>\n                        <div onMouseEnter={this.handleExperienceHover}\n                            onMouseLeave={this.handleExperienceHover}\n                            className={this.state.isExperienceHovering ? 'expand-resume-box' : 'contract-resume-box'}\n                        >\n                            <h1 className=\"resume-box-header\">Experience</h1>\n                            <p className={this.state.isExperienceHovering ? 'show-resume-p' : 'hide-resume-p'}>\n                                <u>JP Morgan Chase</u> <i>November 2017 - Present</i> <br />\n                                Software Engineer<br />\n                                <u>PricewaterhouseCoopers</u> <i>August 2015 - May 2017</i> <br />\n                                Assurance Associate<br />\n                            </p>\n                        </div>\n                    </ScrollAnimation>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport default Resume;","import React from 'react';\nimport '../App.css';\nimport Navbar from './Navbar';\nimport About from './About';\nimport Resume from './Resume';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header className='App-header'>\n\t\t\t\t<Navbar />\n\t\t\t\t<About />\n\t\t\t\t<Resume />\n\t\t\t</header>\n\t\t</div >\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}