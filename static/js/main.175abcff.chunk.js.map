{"version":3,"sources":["meBW.png","photo.png","components/Navbar.js","components/About.js","components/Resume.js","components/Projects.js","components/Skills.js","components/App.js","serviceWorker.js","index.js","me.png"],"names":["module","exports","__webpack_require__","p","Navbar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","bind","assertThisInitialized","state","isScrolling","window","addEventListener","removeEventListener","setState","setTimeout","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Component","About","onChange","isVisible","onViewportChange","_this2","scrollAnimation_min_default","animateIn","animateOut","afterAnimatedIn","afterAnimatedOut","src","me","alt","Experience","console","log","handleEducationHover","handleExperienceHover","isEducationHovering","isExperienceHovering","toggleEducationHoverState","toggleExperienceHoverState","Projects","style","marginBottom","Skills","App","handleViewportChange","page","aboutIsVisible","resumeIsVisible","projectsIsVisible","skillsIsVisible","components_Navbar","components_About","Resume","components_Projects","components_Skills","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.175abcff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/meBW.26d5b98a.png\";","module.exports = __webpack_public_path__ + \"static/media/photo.0c9bb441.png\";","import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t// this.handleMouseHover = this.handleMouseHover.bind(this);\n\t\tthis.handleScroll = this.handleScroll.bind(this);\n\t\tthis.state = {\n\t\t\t// isHovering: false,\n\t\t\tisScrolling: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('scroll', this.handleScroll);\n\t\tthis.handleScroll();\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('scroll', this.handleScroll);\n\t}\n\n\thandleScroll() {\n\t\tthis.setState({ isScrolling: true });\n\t\tsetTimeout(\n\t\t\tfunction () {\n\t\t\t\tthis.setState({ isScrolling: false });\n\t\t\t}\n\t\t\t\t.bind(this),\n\t\t\t3000\n\t\t);\n\t}\n\n\t// handleMouseHover() {\n\t// \tthis.setState(this.toggleHoverState);\n\t// }\n\n\t// toggleHoverState(state) {\n\t// \treturn {\n\t// \t\tisHovering: !state.isHovering,\n\t// \t};\n\t// }\n\n\trender() {\n\t\tlet visible = 'visible ';\n\t\tlet not = 'not ';\n\n\t\treturn (\n\t\t\t// <div className=\"nav-container\" onMouseEnter={this.handleMouseHover}\n\t\t\t// \tonMouseLeave={this.handleMouseHover}\n\t\t\t// \tclassName={(this.state.isHovering || this.state.isScrolling) ? 'show-nav' : 'hide-nav'}\n\t\t\t// >\n\t\t\t<nav className='navbar navbar-light navbar-expand-lg fixed-top'>\n\t\t\t\t{/* <a className='navbar-brand' href='#'>\n\t\t\t\t\t\t\tNavbar\n\t\t\t\t\t\t</a> */}\n\t\t\t\t<button className='navbar-toggler' type='button' data-toggle='collapse' data-target='#navbarNav'\n\t\t\t\t\taria-controls='navbarNav' aria-expanded='false' aria-label='Toggle navigation'>\n\t\t\t\t\t<span className='navbar-toggler-icon' />\n\t\t\t\t</button>\n\t\t\t\t<div className='collapse navbar-collapse center' id='navbarNav'>\n\t\t\t\t\t<ul className='navbar-nav'>\n\t\t\t\t\t\t<li className='nav-item active'>\n\n\t\t\t\t\t\t\t<h1 className=\"nav-header\">\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t// className={this.props.aboutIsVisible ? 'nav-link navbar-links current' : 'nav-link navbar-links'}\n\t\t\t\t\t\t\t\t\tclassName='nav-link navbar-links'\n\t\t\t\t\t\t\t\t\thref='#about'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tabout <span className='sr-only'>(current)</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t<h1 className=\"nav-header\">\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t// className={this.props.resumeIsVisible ? 'nav-link navbar-links current' : 'nav-link navbar-links'}\n\t\t\t\t\t\t\t\t\tclassName='nav-link navbar-links'\n\t\t\t\t\t\t\t\t\thref='#resume'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tresume\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t<h1 className=\"nav-header\">\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t// className={this.props.projectsIsVisible ? 'nav-link navbar-links current' : 'nav-link navbar-links'}\n\t\t\t\t\t\t\t\t\tclassName='nav-link navbar-links'\n\t\t\t\t\t\t\t\t\thref='#projects'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tprojects\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li className='nav-item'>\n\t\t\t\t\t\t\t<h1 className=\"nav-header\">\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t// className={this.props.skillsIsVisible ? 'nav-link navbar-links current' : 'nav-link navbar-links'}\n\t\t\t\t\t\t\t\t\tclassName='nav-link navbar-links'\n\t\t\t\t\t\t\t\t\thref='#skills'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tskills\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</nav>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport meBW from '../meBW.png';\nimport me from '../me.png';\nimport photo from '../photo.png';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport \"animate.css/animate.min.css\";\nimport VisibilitySensor from 'react-visibility-sensor';\n\n\nclass About extends Component {\n\n    onChange = (isVisible) => {\n        this.props.onViewportChange(isVisible, 'about');\n    }\n\n    render() {\n        return (\n            // <VisibilitySensor onChange={this.onChange} partialVisibility={true} minTopValue={800}>\n            <ScrollAnimation animateIn='fadeIn' animateOut='fadeOut'\n                afterAnimatedIn={() => { this.props.onViewportChange(true, 'about') }}\n                afterAnimatedOut={() => { this.props.onViewportChange(false, 'about') }}\n            >\n                <div className=\"row page\" id=\"about\">\n                    <div className=\"hidden-xs hidden-sm col-md-1 col-lg-1\"></div>\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-7\">\n                        <div className=\"about-flex-collapse\">\n                            <div className=\"flex-center-right\">\n                                {/* <TweenComponent /> */}\n                                <h1 className=\"title\">\n                                    hi, i'm anne marie\n                                </h1>\n                                <p className=\"about-me-paragraph\">\n                                    I'm a Fullstack Software Engineer specializing in JavaScript and Front-End Engineering.\n                                    Currently based in Chicago, Illinois and employed as a Software Engineer for JP Morgan Chase.\n                                </p>\n                            </div>\n                            <img src={me} className='me' alt='logo' />\n                        </div>\n                    </div>\n                </div>\n            </ScrollAnimation>\n\n            // </VisibilitySensor>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport \"animate.css/animate.min.css\";\nimport VisibilitySensor from 'react-visibility-sensor';\n\nclass Experience extends Component {\n    constructor(props) {\n        super(props);\n        this.handleEducationHover = this.handleEducationHover.bind(this);\n        this.handleExperienceHover = this.handleExperienceHover.bind(this);\n        this.state = {\n            isEducationHovering: false,\n            isExperienceHovering: false,\n        };\n    }\n\n    onChange = (isVisible) => {\n        console.log('resume change');\n        this.props.onViewportChange(isVisible, 'resume');\n    }\n\n    handleEducationHover() {\n        this.setState(this.toggleEducationHoverState);\n    }\n\n    toggleEducationHoverState(state) {\n        return {\n            isEducationHovering: !state.isEducationHovering,\n        };\n    }\n\n    handleExperienceHover() {\n        this.setState(this.toggleExperienceHoverState);\n    }\n\n    toggleExperienceHoverState(state) {\n        return {\n            isExperienceHovering: !state.isExperienceHovering,\n        };\n    }\n\n    render() {\n\n        return (\n            // <VisibilitySensor onChange={this.onChange} partialVisibility={true} minTopValue={800} minBottomValue={800}>\n            <ScrollAnimation animateIn='fadeIn' animateOut='fadeOut'\n                afterAnimatedIn={() => { this.props.onViewportChange(true, 'resume') }}\n                afterAnimatedOut={() => { this.props.onViewportChange(false, 'resume') }}\n            >\n                <div className=\"row page\" id=\"resume\">\n                    <div className=\"d-none d-lg-block col-lg-3\"></div>\n                    <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-7 resume-container\">\n                        <div className=\"experience-container\">\n                            <p className='text-right border-right padding-right'>\n                                <b><u>JP Morgan Chase</u></b> <br />\n                                Software Engineer | <i>November 2017 - Present</i><br />\n                                <b><u>PricewaterhouseCoopers</u></b> <br />\n                                Assurance Associate | <i>August 2015 - May 2017</i><br />\n                                Assurance Intern | <i>June 2014 - August 2014</i><br />\n                            </p>\n                            {/* <div className=\"resume-divider\"></div> */}\n                            <h1 className=\"padding-left experience-header\">experience</h1>\n                        </div>\n                        <br className=\"resume-break\" />\n                        <br className=\"resume-break\" />\n                        <div className=\"education-container\">\n                            <h1 className=\"text-right padding-right education-header\">education</h1>\n                            {/* <div className=\"resume-divider\"></div> */}\n                            <p className=\"border-left padding-left\">\n                                <b><u>The Ohio State University</u></b><br />\n                                <i>B.S. in Business Administration</i>  |  Accounting  |  3.6 GPA <br />\n                                Honors Cohort Program: 1 of 30 out of over 1000 business students selected to participate in a rigorous academic program that focused on leadership skills, team building, real-world experience, and service-learning opportunities <br />\n                                <br />\n                                <b><u>Fullstack Academy</u></b> <br />\n                                <i>Software Engineering</i> <br />\n                                Intensive software development program focusing on JavaScript, Sequelize, Express, React, and related libraries. Created multiple fullstack applications.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </ScrollAnimation >\n            // </VisibilitySensor>\n        );\n    }\n}\n\nexport default Experience;","import React, { Component } from 'react';\nimport me from '../me.png';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport \"animate.css/animate.min.css\";\n// import memesForHumans from '../memesForHumans.png';\nimport VisibilitySensor from 'react-visibility-sensor';\n\n\nclass Projects extends Component {\n\n    // onChange = (isVisible) => {\n    //     this.props.onViewportChange(isVisible, 'projects');\n    // }\n\n    render() {\n        let marginBottom = {\n            marginBottom: '20px',\n        }\n\n        return (\n            // <VisibilitySensor onChange={this.onChange} partialVisibility={true} minTopValue={800}>\n            <ScrollAnimation animateIn='fadeIn' animateOut='fadeOut'\n                afterAnimatedIn={() => { this.props.onViewportChange(true, 'projects') }}\n                afterAnimatedOut={() => { this.props.onViewportChange(false, 'projects') }}\n            >\n                <div className=\"page content-page row\" id=\"projects\">\n                    <img src={me} className='me' style={marginBottom} alt='logo' />\n                    {/* <TweenComponent /> */}\n                    <div className=\"header-bg\">\n                        <h1 className=\"title\"> Projects </h1>\n                    </div>\n                    <p>\n                        (coming soon!)\n                    </p>\n                </div>\n            </ScrollAnimation>\n            // </VisibilitySensor>\n        );\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport me from '../me.png';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport \"animate.css/animate.min.css\";\nimport VisibilitySensor from 'react-visibility-sensor';\n\n\nclass Skills extends Component {\n\n    onChange = (isVisible) => {\n        this.props.onViewportChange(isVisible, 'skills');\n    }\n\n    render() {\n        let marginBottom = {\n            marginBottom: '20px',\n        }\n\n        return (\n            // <VisibilitySensor onChange={this.onChange} partialVisibility={true} minTopValue={800}>\n            <ScrollAnimation animateIn='fadeIn' animateOut='fadeOut'\n                afterAnimatedIn={() => { this.props.onViewportChange(true, 'skills') }}\n                afterAnimatedOut={() => { this.props.onViewportChange(false, 'skills') }}\n            >\n                <div className=\"page content-page row\" id=\"skills\">\n                    <img src={me} className='me' style={marginBottom} alt='logo' />\n                    {/* <TweenComponent /> */}\n                    <div className=\"header-bg\">\n                        <h1 className=\"title\"> Skills </h1>\n                    </div>\n                    <p>\n                        (also coming soon!)\n                    </p>\n                </div>\n            </ScrollAnimation>\n            // </VisibilitySensor>\n        );\n    }\n}\n\nexport default Skills;","import React, { Component } from 'react';\nimport '../App.css';\nimport Navbar from './Navbar';\nimport About from './About';\nimport Resume from './Resume';\nimport Projects from './Projects';\nimport Skills from './Skills';\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { aboutIsVisible: false, resumeIsVisible: false, projectsIsVisible: false, skillsIsVisible: false }\n\t}\n\n\thandleViewportChange = (isVisible, page) => {\n\t\tconsole.log(page, isVisible);\n\t\tif (page === 'about') {\n\t\t\tthis.setState({ aboutIsVisible: isVisible });\n\t\t} else if (page === 'resume') {\n\t\t\tthis.setState({ resumeIsVisible: isVisible });\n\t\t} else if (page === 'projects') {\n\t\t\tthis.setState({ projectsIsVisible: isVisible });\n\t\t} else if (page === 'skills') {\n\t\t\tthis.setState({ skillsIsVisible: isVisible });\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='container-fluid'>\n\t\t\t\t<header className='App-header'>\n\t\t\t\t\t<Navbar\n\t\t\t\t\t\taboutIsVisible={this.state.aboutIsVisible}\n\t\t\t\t\t\tresumeIsVisible={this.state.resumeIsVisible}\n\t\t\t\t\t\tprojectsIsVisible={this.state.projectsIsVisible}\n\t\t\t\t\t\tskillsIsVisible={this.state.skillsIsVisible}\n\t\t\t\t\t/>\n\t\t\t\t\t<About onViewportChange={this.handleViewportChange} />\n\t\t\t\t\t<Resume onViewportChange={this.handleViewportChange} />\n\t\t\t\t\t<Projects onViewportChange={this.handleViewportChange} />\n\t\t\t\t\t<Skills onViewportChange={this.handleViewportChange} />\n\t\t\t\t</header>\n\t\t\t</div >\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/me.4c5f826b.png\";"],"sourceRoot":""}